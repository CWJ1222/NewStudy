package com.shinhan.day03;

public class 배열 {

	public static void main(String[] args) {
		// f1();
		// f2();
		f3();
	}

	private static void f3() {
		int[] scores = { 100, 90, 88, 100, 30 };
		int total = 0;
		for (int data : scores) {
			total += data;
		}
		System.out.println(total);
		System.out.println((double)total / scores.length);
	}

	private static void f2() {
		String[] arr;
		String arr2[] = new String[3];
		arr = new String[3];

//		String[] arr3 = new String[3] {"HTML", "CSS", "JavaScript"};
//		String[] arr3 ={"HTML", "CSS", "JavaScript"}; -> 이렇게 써야 한다.
		String[] arr3;
		arr3 = new String[] { "HTML", "CSS", "JavaScript" };

		arr[0] = "자바";
		arr[1] = new String("DB");
		arr[2] = new String("Spring");
		// arr[3] = new String("Spring"); index가 범위 벗어남. exception.
		for (int i = 0; i < arr.length; i++) {
			System.out.println(arr[i]);
		}

	}

	private static void f1() {
		// 연속된 공간에 값을 나열시키고, 각 값에 인덱스를 부여해 놓은 자료구조
		// 1. 배열참조변수 선언
		int[] arr;
		// 선언 + 생
		int arr2[] = new int[5];

		// 선언 + 생성 + 초기화
		int[] arr3 = new int[] { 100, 200, 300, 400, 500 }; // []안에 개수 사용불가
		int[] arr4 = { 100, 200, 300, 400, 500 }; // 선언 시 초기화할깨 생성코드는 생략가
		int[] arr5;
		arr5 = new int[] { 1, 10, 100, 1000, 10000 };// 선언과 초기화가 분리된 경우 생성코드 생략 불가

		// 2. 배열생성 - Heap영역에 생성됨, 개수는 필수, 생성 시 자동초기화 된다.
		// 기본형 정수 -> 0, 실수 -> 0.0, 논리 -> false 참조형 -> null
		arr = new int[5];
		// 3, 배열사용
		// System.out.println(arr[0]);
		/*
		 * for(int data : arr) { System.out.println(data); }
		 */
		for (int i = 0; i < arr.length; i++) {
			System.out.println(i + "번째:" + arr[i] + "--------" + arr2[i] + "--------" + arr3[i] + "--------" + arr4[i]
					+ "--------" + arr5[i]);
		}
	}

}
